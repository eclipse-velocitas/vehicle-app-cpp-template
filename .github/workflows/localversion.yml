# Copyright (c) 2022-2024 Contributors to the Eclipse Foundation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Release local version
concurrency:
  group: local-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    # Run only on branches/commits and not tags
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  publish-readme:
    name: Publish README
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Archive local setup documentation
        uses: actions/upload-artifact@v4
        with:
          name: LOCAL SETUP
          path: ./.devcontainer/localversion/LOCAL_SETUP.md

  create-local-version:
    name: Create local version
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [linux/amd64, linux/aarch64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix dubious ownership
        run: |
          git config --global --add safe.directory $( pwd )

      - name: Write conan credentials
        run: |
          echo "CONAN_REMOTE_USER=${{ secrets.BDC_ARTIFACTORY_USER }}" >> .credentials
          echo "CONAN_REMOTE_TOKEN=${{ secrets.BDC_ARTIFACTORY_PAT }}" >> .credentials

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Patch repository contents
        run: |
          sed -i '/.*devenv-github-workflows.*/d; /.*devenv-github-templates.*/d' .velocitas.json

      - name: Setup SDV credentials
        run: |
          echo "${{ secrets.SDV_REPO_READ_ACCESS_TOKEN }}" > .github_token

      - name: Build Devenv Local Version
        uses: docker/build-push-action@v5
        with:
          pull: true
          outputs: |
            type=docker,dest=./localimage.tar
          file: ./.devcontainer/localversion/Dockerfile
          context: .
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.3

      - name: Save local runtime
        run: |
            IMAGE_DIR=.devcontainer/localversion/images
            mkdir -p $IMAGE_DIR
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.vehicleDatabrokerImage' .velocitas.json)
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.vehicleDatabrokerCliImage' .velocitas.json)
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.mqttBrokerImage' .velocitas.json)
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.mockServiceImage' .velocitas.json)
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.canProviderImage' .velocitas.json)
            docker image pull --platform ${{ matrix.platform }} $(jq -r '.variables.csvProviderImage' .velocitas.json)
            docker save -o $IMAGE_DIR/databroker.tar $(jq -r '.variables.vehicleDatabrokerImage' .velocitas.json)
            docker save -o $IMAGE_DIR/databroker-cli.tar $(jq -r '.variables.vehicleDatabrokerCliImage' .velocitas.json)
            docker save -o $IMAGE_DIR/mosquitto.tar $(jq -r '.variables.mqttBrokerImage' .velocitas.json)
            docker save -o $IMAGE_DIR/mockservice.tar $(jq -r '.variables.mockServiceImage' .velocitas.json)
            docker save -o $IMAGE_DIR/canprovider.tar $(jq -r '.variables.canProviderImage' .velocitas.json)
            docker save -o $IMAGE_DIR/csvprovider.tar $(jq -r '.variables.csvProviderImage' .velocitas.json)

      - name: Patch repository contents
        run: |
          rm -f .credentials
          rm -f .conanremotes
          rm -f .ort.yml
          rm -f .licensechecker.yml
          rm -rf .git
          rm -rf .github
          rm -rf .github_token
          echo "*.tar" >> app/Dockerfile.dockerignore
          echo "**/build" >> app/Dockerfile.dockerignore

      - name: Create archive string name
        id: replace_string
        run: |
          PLATFORM=${{ matrix.platform }}
          PLATFORM=${PLATFORM//\//_}
          echo "printable_platform=${PLATFORM}" >> "$GITHUB_OUTPUT"

      - name: Install Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: |
          syft --platform ${{ matrix.platform }} \
            -o spdx-json@2.2=SBOM/SPDX/${{ steps.replace_string.outputs.printable_platform }}.spdx.json \
            -o cyclonedx-json=SBOM/CycloneDX/${{ steps.replace_string.outputs.printable_platform }}.cyclonedx.json \
            localimage.tar

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SBOM-${{ steps.replace_string.outputs.printable_platform }}
          path: |
            SBOM/*

      - name: Archive contents
        run: tar -czvf /tmp/devenv-local-${{ steps.replace_string.outputs.printable_platform }}.tar.gz ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: devenv-local-${{ steps.replace_string.outputs.printable_platform }}
          path: /tmp/devenv-local-${{ steps.replace_string.outputs.printable_platform }}.tar.gz
          retention-days: 1

  test-local-version:
    needs: create-local-version
    name: Test local version
    runs-on: ubuntu-22.04

    steps:
      - name: Cleanup
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: devenv-local-linux_amd64

      - name: Untar archive
        run: tar -xvf devenv-local-linux_amd64.tar.gz

      - name: Install Docker image from file
        run: |
          docker load -i localimage.tar

      - name: Test devContainer
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            velocitas exec build-system install -r
            velocitas exec build-system build -r
            docker load -i localimage.tar
            docker build -f app/Dockerfile -t vehicleapp:local .
            ./build-for-target.sh
